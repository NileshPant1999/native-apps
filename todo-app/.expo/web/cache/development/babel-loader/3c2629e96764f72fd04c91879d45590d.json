{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/nilesh/Desktop/native-apps/nilesh-todo/components/AddListModal.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { AntDesign } from \"@expo/vector-icons\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport colors from \"../Colors\";\nimport tempData from \"../tempData\";\n\nvar AddListModal = function (_Component) {\n  _inherits(AddListModal, _Component);\n\n  var _super = _createSuper(AddListModal);\n\n  function AddListModal() {\n    var _this;\n\n    _classCallCheck(this, AddListModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.backgroundColor = [\"#5CD859\", \"#24A6D9\", \"#595BD9\", \"#8022D9\", \"#D159D8\", \"#D85963\", \"#D88559\"];\n    _this.state = {\n      name: \"\",\n      color: _this.backgroundColor[0]\n    };\n\n    _this.createTodo = function () {\n      var _this$state = _this.state,\n          name = _this$state.name,\n          color = _this$state.color;\n      tempData.push({\n        name: name,\n        color: color,\n        todos: []\n      });\n\n      _this.setState({\n        name: \"\"\n      });\n\n      _this.props.closeModal();\n    };\n\n    return _this;\n  }\n\n  _createClass(AddListModal, [{\n    key: \"renderColors\",\n    value: function renderColors() {\n      var _this2 = this;\n\n      return this.backgroundColor.map(function (color) {\n        return React.createElement(TouchableOpacity, {\n          key: color,\n          style: [styles.colorSelect, {\n            backgroundColor: color\n          }],\n          onPress: function onPress() {\n            return _this2.setState({\n              color: color\n            });\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(KeyboardAvoidingView, {\n        style: styles.container,\n        behavior: \"padding\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          position: \"absolute\",\n          top: 64,\n          right: 32\n        },\n        onPress: this.props.closeModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, React.createElement(AntDesign, {\n        name: \"close\",\n        size: 24,\n        color: colors.black,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          alignSelf: 'stretch',\n          marginHorizontal: 32\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, \"Create Todo List\"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"List Name\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            name: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          marginTop: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, this.renderColors()), React.createElement(TouchableOpacity, {\n        style: [styles.create, {\n          backgroundColor: this.state.color\n        }],\n        onPress: this.createTodo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: colors.white,\n          fontWeight: \"600\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, \"Create\"))));\n    }\n  }]);\n\n  return AddListModal;\n}(Component);\n\nexport { AddListModal as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: \"800\",\n    color: colors.black,\n    alignSelf: 'center',\n    marginBottom: 16\n  },\n  input: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderRadius: 6,\n    height: 50,\n    marginTop: 8,\n    borderColor: colors.blue,\n    paddingHorizontal: 16,\n    fontSize: 18\n  },\n  create: {\n    marginTop: 24,\n    height: 50,\n    borderRadius: 6,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  colorSelect: {\n    width: 30,\n    height: 30,\n    borderRadius: 4\n  }\n});","map":{"version":3,"sources":["/home/nilesh/Desktop/native-apps/nilesh-todo/components/AddListModal.js"],"names":["React","Component","AntDesign","colors","tempData","AddListModal","backgroundColor","state","name","color","createTodo","push","todos","setState","props","closeModal","map","styles","colorSelect","container","position","top","right","black","alignSelf","marginHorizontal","title","input","text","flexDirection","justifyContent","marginTop","renderColors","create","white","fontWeight","StyleSheet","flex","alignItems","fontSize","marginBottom","borderWidth","hairlineWidth","borderRadius","height","borderColor","blue","paddingHorizontal","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { AntDesign } from \"@expo/vector-icons\"\nimport { Text, TextInput, View, StyleSheet, KeyboardAvoidingView, TouchableOpacity } from 'react-native'\nimport colors from '../Colors'\nimport tempData from '../tempData'\n\nexport default class AddListModal extends Component {\n\n    backgroundColor = [\"#5CD859\", \"#24A6D9\", \"#595BD9\", \"#8022D9\", \"#D159D8\", \"#D85963\", \"#D88559\"]\n\n    state = {\n        name: \"\",\n        color: this.backgroundColor[0]\n    }\n\n    createTodo = () => {\n        const { name, color } = this.state\n\n        tempData.push({\n            name,\n            color,\n            todos: []\n        })\n\n        this.setState({ name: \"\" })\n        this.props.closeModal()\n    }\n\n\n    renderColors() {\n        return this.backgroundColor.map(color => {\n            return (\n                <TouchableOpacity key={color}\n                    style={[styles.colorSelect, { backgroundColor: color }]}\n                    onPress={() => this.setState({ color })}\n                />\n            )\n        })\n    }\n\n    render() {\n        return (\n            <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\n                <TouchableOpacity style={{ position: \"absolute\", top: 64, right: 32 }} onPress={this.props.closeModal} >\n                    <AntDesign name='close' size={24} color={colors.black} />\n                </TouchableOpacity>\n\n                <View style={{ alignSelf: 'stretch', marginHorizontal: 32 }}>\n                    <Text style={styles.title}>Create Todo List</Text>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"List Name\"\n                        onChangeText={text => this.setState({ name: text })}\n                    />\n\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginTop: 12 }}>{this.renderColors()}</View>\n\n                    <TouchableOpacity\n                        style={[styles.create, { backgroundColor: this.state.color }]}\n                        onPress={this.createTodo}\n                    >\n                        <Text style={{ color: colors.white, fontWeight: \"600\" }}>Create</Text>\n                    </TouchableOpacity>\n                </View>\n            </KeyboardAvoidingView>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    title: {\n        fontSize: 28,\n        fontWeight: \"800\",\n        color: colors.black,\n        alignSelf: 'center',\n        marginBottom: 16\n    },\n    input: {\n        borderWidth: StyleSheet.hairlineWidth,\n        borderRadius: 6,\n        height: 50,\n        marginTop: 8,\n        borderColor: colors.blue,\n        paddingHorizontal: 16,\n        fontSize: 18\n    },\n    create: {\n        marginTop: 24,\n        height: 50,\n        borderRadius: 6,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    colorSelect: {\n        width: 30,\n        height: 30,\n        borderRadius: 4\n    }\n})\n"]},"metadata":{},"sourceType":"module"}